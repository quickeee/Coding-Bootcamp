#EXERCISE 1

SELECT 
    SAKILA.LANGUAGE.NAME
FROM
    SAKILA.LANGUAGE
ORDER BY SAKILA.LANGUAGE.NAME;

#EXERCISE 2

SELECT 
    FIRST_NAME, LAST_NAME
FROM
    ACTOR
WHERE
    LAST_NAME LIKE '%SON%'
ORDER BY FIRST_NAME;

#EXERCISE 3

SELECT 
    ADDRESS, ADDRESS2
FROM
    ADDRESS
WHERE
    DISTRICT = ''
ORDER BY CITY_ID;

#EXERCISE 4

SELECT 
    TITLE, NAME
FROM
    FILM AS F
        INNER JOIN
    FILM_CATEGORY AS FC ON F.FILM_ID = FC.FILM_ID
        INNER JOIN
    CATEGORY AS C ON C.category_id = FC.category_id
ORDER BY TITLE;

#EXERCISE 5

SELECT 
    FILM_CATEGORY.CATEGORY_ID, COUNT(FILM.TITLE)
FROM
    FILM
        INNER JOIN
    FILM_CATEGORY ON FILM_CATEGORY.FILM_ID = FILM.FILM_ID
GROUP BY FILM_CATEGORY.CATEGORY_ID
ORDER BY COUNT(FILM.TITLE);

#EXERCISE 6

SELECT 
    FILM_CATEGORY.CATEGORY_ID, COUNT(FILM.TITLE)
FROM
    FILM
        INNER JOIN
    FILM_CATEGORY ON FILM_CATEGORY.FILM_ID = FILM.FILM_ID
GROUP BY FILM_CATEGORY.CATEGORY_ID
HAVING COUNT(FILM.TITLE) > 50
ORDER BY COUNT(FILM.TITLE);

#EXERCISE 7

SELECT 
    FILM_CATEGORY.CATEGORY_ID,
    AVG(FILM.replacement_cost),
    AVG(FILM.rental_rate)
FROM
    FILM
        INNER JOIN
    FILM_CATEGORY ON FILM.FILM_ID = FILM_CATEGORY.FILM_ID
GROUP BY CATEGORY_ID
HAVING AVG(FILM.replacement_cost) - AVG(FILM.rental_rate) > 17;

#EXERCISE 8

SELECT 
    FILM.TITLE, CATEGORY.NAME
FROM
    FILM
        INNER JOIN
    film_category ON FILM_CATEGORY.FILM_ID = FILM.FILM_ID
        INNER JOIN
    CATEGORY ON CATEGORY.CATEGORY_ID = CATEGORY.CATEGORY_ID;

#EXERCISE 9

SELECT 
    CATEGORY.NAME, AVG(FILM.replacement_cost), AVG(RENTAL_RATE)
FROM
    CATEGORY
        INNER JOIN
    FILM_CATEGORY ON CATEGORY.category_id = film_category.category_id
        INNER JOIN
    film ON FILM.FILM_ID = FILM_CATEGORY.FILM_ID
GROUP BY CATEGORY.NAME
HAVING AVG(FILM.REPLACEMENT_COST) - AVG(FILM.RENTAL_RATE) > 17;

#EXERCISE 10

SELECT 
    ACTOR.ACTOR_ID,
    ACTOR.first_name,
    ACTOR.last_name,
    COUNT(FILM_ACTOR.FILM_ID) AS NUMBEROFFILMS
FROM
    ACTOR
        INNER JOIN
    FILM_ACTOR ON FILM_ACTOR.ACTOR_ID = ACTOR.ACTOR_ID
GROUP BY ACTOR.FIRST_NAME
ORDER BY NUMBEROFFILMS;

#EXERCISE 11

SELECT 
    ACTOR.ACTOR_ID,
    ACTOR.first_name,
    ACTOR.last_name,
    COUNT(FILM.FILM_ID) AS NUMBEROFFILMS
FROM
    FILM
        INNER JOIN
    FILM_ACTOR ON FILM_ACTOR.FILM_ID = FILM.FILM_ID
        INNER JOIN
    ACTOR ON ACTOR.ACTOR_ID = FILM_ACTOR.ACTOR_ID
WHERE
    FILM.LENGTH > 183
GROUP BY ACTOR.FIRST_NAME
ORDER BY NUMBEROFFILMS;

#EXERCISE 12

SELECT 
    C.TITLE
FROM
    CATEGORY AS A
        INNER JOIN
    FILM_CATEGORY AS B ON A.CATEGORY_ID = B.CATEGORY_ID
        INNER JOIN
    FILM AS C ON B.FILM_ID = C.FILM_ID
        INNER JOIN
    LANGUAGE AS D ON C.LANGUAGE_ID = D.LANGUAGE_ID
WHERE
    A.NAME = 'Documentary'
        AND d.name = 'English';
        
#EXERCISE 13

SELECT 
    A.FILM_ID, A.TITLE
FROM
    FILM AS A
WHERE
    A.FILM_ID NOT IN (SELECT 
            B.FILM_ID
        FROM
            INVENTORY AS B);











